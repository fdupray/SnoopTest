//
//  BeerPresenter.swift
//  Snoopy Beer
//
//  Created by Frederick Dupray on 08/06/2020.
//  Copyright (c) 2020 SnoopyBeer. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BeerPresentationLogic: Favouritable {
    func presentBeer(response: Beer.FetchBeer.Response)
    func presentUpdatedFavouriteStatus(response: Beer.UpdateFavouriteStatus.Response)
}

class BeerPresenter: BeerPresentationLogic {
    
    typealias BeerViewModel = Beer.BeerViewModel
    
    weak var viewController: BeerDisplayLogic?
    
    var favouriteManager: FavouriteManager = FavouriteManager()
    
    //Transform json model into view model
    func presentBeer(response: Beer.FetchBeer.Response) {
        
        let transformedBeers = transformJsonBeerToViewModel(response.models)
        let viewModel = Beer.FetchBeer.ViewModel(models: transformedBeers)
        
        //Display beer models - main queue
        DispatchQueue.main.async {
            self.viewController?.displayBeer(viewModel: viewModel)
        }
    }
    
    //Transform json model into view model
    func presentUpdatedFavouriteStatus(response: Beer.UpdateFavouriteStatus.Response) {
        
        let transformedBeers = transformJsonBeerToViewModel(response.models)
        let viewModel = Beer.FetchBeer.ViewModel(models: transformedBeers)
        
        //Display beer models - main queue
        DispatchQueue.main.async {
            self.viewController?.displayUpdatedFavouriteStatus(viewModel: viewModel)
        }
    }
}

extension BeerPresenter {
    
    func transformJsonBeerToViewModel(_ beers: [Beer.Parseable.BeerModel]) -> [BeerViewModel] {
        
        return beers.map { (model) -> BeerViewModel in
            
            return BeerViewModel(beer: model, isFavourite: favouriteManager.isFavourite(id: "\(model.id)"))
        }
    }
}
