//
//  BeerWorker.swift
//  Snoopy Beer
//
//  Created by Frederick Dupray on 08/06/2020.
//  Copyright (c) 2020 SnoopyBeer. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BeerWorkerDelegate {
    func didFetchBeer(_ beerModels: [Beer.Parseable.BeerModel])
}

protocol Paginatable {
    var limit: Int { get }
    var page: Int { get set }
}

class BeerWorker: Paginatable {
        
    var delegate: BeerWorkerDelegate?
    
    //Pagination
    var limitIncrements = 15
    var limit: Int = 15
    var page: Int = 1
    
    func fetchBeer() {
        
        guard let url = URL(string: "https://api.punkapi.com/v2/beers?page=\(page)&per_page=\(limit)") else {
            return
        }
        
        let session = URLSession.shared.dataTask(with: url) { [weak self] (data, response, error) in
            
            guard let _self = self, let _data = data, error == nil else {
                return
            }
            
            do {
                //Decode JSON with JSONDecoder
                let decoder = JSONDecoder()
                let models = try decoder.decode([Beer.Parseable.BeerModel].self, from: _data)
                _self.delegate?.didFetchBeer(models)
                _self.limit += _self.limitIncrements
                
            } catch {
                
                //Error handling
            }
        }
        
        //Execute task
        session.resume()
    }
}
